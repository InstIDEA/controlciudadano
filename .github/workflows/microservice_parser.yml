# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build the parser service image

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
    paths:
    - 'scripts/python/parser/**'
    - '.github/workflows/microservice_parser.yml'

env:
  IMAGE_NAME: microservice_parser

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 'scripts/python/parser'

    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME

    - name: Tag and push image
      if: github.event.pull_request.merged == true
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

        [ "$VERSION" == "latest" ] && curl "${{ secrets.HOOK_SERVICE_DJBR }}"
        echo "Succeed"

